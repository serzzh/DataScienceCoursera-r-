unzip ('activity.zip')
unzip ('activity.zip')
data <- data[complete.cases(data),]
summary (data)
data <- read.csv('activity.csv')
data <- data[complete.cases(data),]
summary(data)
head(data)
daily_steps <- tapply(data$steps, data$date, FUN=mean)
daily_steps
dy_steps_mean <- tapply(data$steps, data$date, FUN=total)
dy_steps_mean <- tapply(data$steps, data$date, FUN=sum)
hist(dy_steps_mean)
dy_steps_mean
plot(data$interval, data$steps, type=”l”, xlab= “Interval”, ylab= “Number of steps”, col=”green” , lwd=2)
plot(data$interval, data$steps, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(data$interval, data$steps, type='l', xlab= 'Interval', ylab= 'Number of steps')
plot(int$date, int$steps, type='l', xlab= 'Interval', ylab= 'Number of steps')
plot(int$interval, int$steps, type='l', xlab= 'Interval', ylab= 'Number of steps')
int <- tapply(data$steps, data$interval, FUN=mean)
int <- int[complete.cases(int)]
int
int[1]
int[2]
summary(int)
plot(int, type='l', xlab= 'Interval', ylab= 'Number of steps')
plot(data$interval, data$steps, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(data$interval, data$steps, xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot.ts(data$interval, data$steps, xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot.ts(data$interval, data$steps, type='l' xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(data$interval, data$steps, type='l' xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(data$interval, data$steps, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
ts <- tapply(data$steps, data$interval, FUN=mean)
ts <- ts[complete.cases(ts)]
plot(ts$interval, ts$steps, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
ts <- ts[complete.cases(ts)]
ts <- tapply(data$steps, data$interval, FUN=mean, simplify = FALSE)
ts <- ts[complete.cases(ts)]
head(ts)
summary(ts)
ts <- tapply(data$steps, data$interval, FUN=mean)
summary(ts)
?tappply
?tapply
ts <- tapply(data$steps, as.factor(data$interval), FUN=mean)
ts
summary(ts)
ts
ts[1]
ts[2110]
ts$2110]
ts$2110
summary(ts)
ts
plot(ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
ts[1]
ts[,1]
ts
names(ts)
plot(names(ts),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(as.time(names(ts)),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(as.date(names(ts)),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(names(ts),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
ts <- tapply(data$steps, as.factor(data$interval), FUN=mean)
plot(names(ts),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
max(ts)
which.max(ts)
which.max(ts)[1]
names(which.max(ts))
which.max(ts)
which.max(x==ts)
which(ts==max(ts)
)
which.is.max(ts)
which.max(ts)
names(which.max(ts))
length(is.na(data))
length(is.na(data)==TRUE)
length(data[is.na(data),])
is.na(data)
head(is.na(data))
length(data)
length(data$steps)
length(is.na(data$steps))
complete.cases(data)
data <- read.csv('activity.csv')
daily <- tapply(data$steps, data$date, FUN=sum)
daily <- daily[complete.cases(daily)]
hist(daily)
mean(daily)
median(daily)
ts <- tapply(data$steps, as.factor(data$interval), FUN=mean)
plot(names(ts),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
ts
data1 <- data[complete.cases(data),]
ts <- tapply(data1$steps, as.factor(data1$interval), FUN=mean)
plot(names(ts),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
names(which.max(ts))
complete.cases(data)
length(data) - length(complete.cases(data))
length(data[,1]) - length(complete.cases(data))
length(data[,1]) #- length(complete.cases(data))
length(complete.cases(data))
length(data[,1])
length(data[complete.cases(data)])
length(data[complete.cases(data),])
data1 <- data[complete.cases(data),]
data1
head(data1)
head(data[complete.cases(data),])
complete.cases(data$steps)
lenght(complete.cases(data$steps))
length(data$steps)
length(complete.cases(data$steps))
length(is.na(data$steps))
length(is.na(data$steps)==TRUE)
is.na(data$steps)
is.na(data$steps)==TRUE
data[is.na(data$steps),]
length(data[is.na(data$steps),])
data$steps
legnth(data$steps)
length(data$steps)
length(data$steps==NA)
sum(data$steps)
sum(is.na(data$steps))
sum(is.na(data))
xyplot
library(lattice)
xyplot
xyplot(steps~interval,data)
xyplot(steps~interval,data, group = date)
xyplot(steps~interval,data, panel = date)
xyplot(steps~interval,data, group = date)
xyplot(steps~date,data, group = interval)
mav <- function(x,n=5){filter(x,rep(1/n,n), sides=2)}
m <- mav(data$step)
m
ts
ts[2355]
ts[25]
ts[255]
which(names(ts)=='2355')
ts <- tapply(data1, as.factor(data1$interval), FUN=mean)
ts <- apply(data1, as.factor(data1$interval), FUN=mean)
ts <- lapply(data1, as.factor(data1$interval), FUN=mean)
ts <- sapply(data1, as.factor(data1$interval), FUN=mean)
ts <- sapply(data1$steps, as.factor(data1$interval), FUN=mean)
ts <- tapply(data1$steps, as.factor(data1$interval), FUN=mean)
new_data <- apply(data, as.factor(data$interval), FUN=1)
new_data <- apply(data, as.factor(data$interval), FUN='1')
new_data <- apply(data, as.factor(data$interval), FUN=function(x){if (is.na(x$steps){x$steps<-ts}})
new_data <- apply(data, as.factor(data$interval), function(x) if(is.na(x$steps){x$steps<-ts}
new_data <- tapply(data, as.factor(data$interval), function(x) x[is.na(x$steps)])
new_data <- tapply(data, as.factor(data$interval), function(x) mean(x))
new_data <- tapply(data$steps, as.factor(data$interval), function(x) mean(x))
new_data
data
data[4,]
data[124,]
data[324,]
data[q324,]
data[1324,]
data[1324,1]
ts <- tapply(data1, as.factor(data1$interval), FUN=mean)
ts <- tapply(data1[,1], as.factor(data1$interval), FUN=mean)
ts
replace <- function(x <- c())
ts <- tapply(data1[,1], as.factor(data1$interval), FUN=mean)
replace <- function(x,i){
if(is.na(x)) x<-ts[1]
}
replace <- function(x,i){
if(is.na(x)) x<-ts[i]
}
new_data <- tapply(data[,1], as.factor(data$interval), replace(data[,1],as.factor(data$interval))
)
data1 <- data[complete.cases(data),]
ts <- tapply(data1[,1], as.factor(data1$interval), FUN=mean)
new_data <- data
new_data[,1] <- ts
new_data
head(new_data)
head(ts)
new_data <- data
head(new_data)
na <- is.na(new_data[,1])
new_data[,na] <- ts[,na]
new_data[na,1] <- ts[na]
head(new_data)
head(ts)
tail(ts)
tail(new_data)
head(ts, skip=1000)
head(new_data, skip=1000)
head?
)
?head
length(ts)
length(new_data)
length(new_data[,1])
new_data[na,1] <- ts[new_data$interval]
new_data[na,1] <- ts[new_data[na,3]]
new_data <- data
na <- is.na(new_data[,1])
new_data[na,1] <- ts[new_data[na,3]]
length(na)
length(newdata[na,1])
length(new_data[na,1])
new_data[na,1]
new_data[na,3]
new_data[na,1] <- new_data[na,3]
new_data <- data
na <- is.na(new_data[,1])
new_data[na,1] <- new_data[na,3]
length(ts)
new_data
head(new_data)
new_data[na,1] <- ts[new_data[na,3]]
ts
f_ts <- function(x) ts[x]
new_data[na,1] <- f_ts(new_data[na,3])
length(na)
new_data <- data
index <- data[,1] == NA
length(na)
index
index <- is.na(data[,1])
head(index)
head(index)
head(new_data)
new_data[index,1] <- '5'
head(new_data)
new_data[index,1] <- '4'
head(new_data)
new_data[index,1] <- ts[1]
head(new_data)
new_data[index,1] <- ts[300]
head(new_data)
new_data[index,1] <- ts[250]
head(new_data)
new_data[index,1] <- ts[which(names(ts)==new_data[index,3])]
head(new_data)
head(ts)
daily_n <- tapply(new_data$steps, new_data$date, FUN=sum)
daily_n <- tapply(new_data[,1], new_data[,2], FUN=sum)
new_data[index,1] <- as.number(ts[which(names(ts)==new_data[index,3])])
new_data[index,1] <- as.numeric(ts[which(names(ts)==new_data[index,3])])
daily_n <- tapply(new_data[,1], new_data[,2], FUN=sum)
names(new_data)
daily_n <- tapply(new_data$steps, as.factor(new_data$date), FUN=sum)
daily_n <- tapply(as.numeric(new_data$steps), as.factor(new_data$date), FUN=sum)
daily_n <- daily[complete.cases(daily_n)]
daily_n <- tapply(as.numeric(new_data$steps), as.factor(new_data$date), FUN=sum)
hist(daily_n)
mean(daily_n)
mean(daily_n)
head(daily)
head(daily_n)
mean(daily_n)
mean(daily)
mean(ts)
sum(is.na(daily))
sum(is.na(daily_n))
daily_n[is.na(daily_n),]
daily_n[is.na(daily_n)]
daily_n <- tapply(as.numeric(new_data$steps), new_data$date, FUN=sum)
daily_n[is.na(daily_n)]
new_data[is.na(new_data)]
new_data[is.na(new_data),1]
new_data[is.na(new_data),2]
new_data[is.na(new_data),3]
daily_n[is.na(daily_n)]
data1 <- data[complete.cases(data),]
ts <- tapply(data1$steps, as.factor(data1$interval), FUN=mean)
plot(names(ts),ts, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
?aggregate
ts <- aggregate(data, as.factor(data$interval), FUN=mean)
ts <- aggregate(data, as.list(data$interval), FUN=mean)
ts <- aggregate(data$steps, as.list(data$interval), FUN=mean)
ts <- aggregate(data$steps, data$interval, FUN=mean)
as.factor(data$interval)
as.list(as.factor(data$interval))
levels(data$interval)
levels(as.factor(data$interval)
)
ts <- aggregate(data$steps, levels(as.factor(data$interval)), FUN=mean)
ts <- aggregate(data$steps, as.list(levels(as.factor(data$interval))), FUN=mean)
ts <- aggregate(steps~interval, data, FUN=mean)
ts
plot(ts$interval,ts$steps, type='l', xlab= 'Interval', ylab= 'Number of steps', col='green' , lwd=2)
plot(ts$interval,ts$steps, type='l', xlab= 'Interval', ylab= 'Steps', col='blue' , lwd=2)
ts <- aggregate(steps~interval, data, FUN=mean)
new_data <- data
index <- is.na(data[,1])
new_data[index,1] <- as.numeric(ts[steps==new_data[index,3])])
new_data[index,1] <- as.numeric(ts[ts$steps==new_data[index,3]])
new_data[index,1] <- ts[ts$steps==new_data[index,3]]
ts
new_data[index,1] <- ts[ts$interval==new_data[index,3]]
ts[288]
ts[288]
ts[[288]]
ts
head(ts)
ts$interval
index
new_data[index,1] <- ts[ts$interval==new_data[index,1],1]
head(new_data)
head(ts)
new_data <- data
index <- is.na(data[,1])
new_data[index,1] <- ts[ts$interval==new_data[index,1],2]
head(new_data)
new_data[index,1] <- as.numeric(ts[which(ts$interval==new_data[index,3])])
new_data[index,1] <- as.numeric(ts[which(ts$interval==new_data[index,3]),3])
new_data[index,1] <- as.numeric(ts[which(ts$interval==new_data[index,3]),2])
head(new_data)
new_data[index,1] <- ts[which(ts$interval==new_data[index,3]),2]
head(new_data)
daily_n <- tapply(as.numeric(new_data$steps), new_data$date, FUN=sum)
mean(daily_n)
sum(is.na(new_data))
sum(is.na(data))
head(new_data)
head(data)
sum(is.na(new_data))
is.na(new_data)
which(is.na(new_data))
head(index)
tail(index)
index[17568]
new_data[17568,]
ts[,2355]
ts[2355]
head(ts)
tail(ts)
ts
new_data <- data
index <- is.na(data[,1])
new_data[index] <-'1'
new_data[index,1] <- '1'
tail(new_data)
ts
ts$steps[4]
ts$steps[400]
ts$steps[288]
replace <- function(x) ts$steps[which(ts$interval==x)]
new_data <- data
index <- is.na(data[,1])
new_data[index,1] <- replace(new_data[index,3])
tail(new_data)
head(new_data)
tail(index)
ts <- aggregate(steps~interval, data, FUN=mean)
replace <- function(x) {
if(x==NA){
ts$steps[which(ts$interval==x)]
}else{
x
}
}
replace(1)
replace <- function(x) {
if(is.na(x)){
ts$steps[which(ts$interval==x)]
}else{
x
}
}
replace(1)
replace <- function(x) {
if(is.na(data$steps[x])){
ts$steps[which(ts$interval==x)]
}else{
data$steps[x]
}
}
replace(1)
replace(2)
data$steps[1]
data$steps[2]
data$steps[245]
data$steps[2450]
replace(2450)
replace <- function(x) {
if(is.na(data$steps[x])){
ts$steps[which(ts$interval==data$interval[x])]
}else{
data$steps[x]
}
}
replace(2450)
replace(2)
replace(1)
new_data[index,1] <- apply(new_data[index,1],replace)
new_data[index,1] <- apply(new_data[index,1],FUN=replace)
new_data[index,1] <- sapply(new_data[index,1],FUN=replace)
new_data[index,1] <- sapply(index,FUN=replace)
new_data[index,1] <- replace(index)
head[data]
head(data)
head(new_data)
tail(new_data)
new_data <- data
index <- is.na(data[,1])
new_data[index,1] <- sapply(index,FUN=replace)
new_data[index,1] <- sapply(index,FUN=replace)
warnings()
index
new_data[index,1] <- sapply(which(data[index,],FUN=replace)
)
new_data[index,1] <- sapply(which(data[index,]),FUN=replace)
new_data[index,1] <- sapply(which(index),FUN=replace)
tail(new_data)
replace <- function(x, d=data, t=ts) {
if(is.na(d$steps[x])){
t$steps[which(t$interval==d$interval[x])]
}else{
d$steps[x]
}
}
new_data[index,1] <- sapply(which(index),FUN=replace)
new_data <- data
index <- is.na(data[,1])
tail(new_data)
head(new_data)
new_data[index,1] <- sapply(which(index),FUN=replace)
head(new_data)
tail(new_data)
tail(new_data)
new_data <- data
index <- is.na(data[,1])
new_data[index,1] <- sapply(which(index),FUN=replace)
new_data[1435,1]
new_data[1435,1]
new_data[1415,1]
new_data[11415,1]
new_data[11416,1]
data[11416,1]
data[11415,1]
data[7415,1]
data[4415,1]
data[2415,1]
data[2315,1]
data[1315,1]
data[815,1]
data
data[3326,1]
new_data[3326,1]
new_data[3331,1]
new_data[3330,1]
data[3330,1]
data[34,1]
new_data[34,1]
tapply[data[,1], FUN=sum]
tapply[data$steps, FUN=sum]
apply[data$steps, FUN=sum]
sapply[data$steps, FUN=sum]
sapply[new_data$steps, FUN=sum]
sapply[new_data$steps, new_data$interval, FUN=sum]
tapply[new_data$steps, new_data$interval, FUN=sum]
tapply[as.numeric(new_data$steps), new_data$interval, FUN=sum]
new_data$steps
tapply(as.numeric(new_data$steps), new_data$interval, FUN=sum)
sum(tapply(as.numeric(new_data$steps), new_data$interval, FUN=sum))
sum(tapply(as.numeric(data$steps), new_data$interval, FUN=sum))
sum(tapply(as.numeric(data$steps), data$interval, FUN=sum))
sum(tapply(as.numeric(data1$steps), data1$interval, FUN=sum))
weekdays
?weekdays
data$wday <- factor (weekday(data$date))
data$wday <- factor (weekdays(data$date))
data$wday <- weekdays(data$date)
weekdays(data$date)
head(data$date)
data$wday <- factor (weekdays(as.date(data$date))
)
data$wday <- factor (weekdays(as.dates(data$date)))
data$wday <- factor (weekdays(as.Date(data$date)))
head(data)
data$wday <- factor (weekdays(as.Date(data$date)) %in% weekend, levels=c(FALSE,TRUE), labels=c('weekday', 'weekend') )
weekend <- c('Saturday','Sunday')
data$wday <- factor (weekdays(as.Date(data$date)) %in% weekend, levels=c(FALSE,TRUE), labels=c('weekday', 'weekend') )
head(data)
tail(data)
summary(data)
xyplot(interval~steps|data)
xyplot(interval~steps, data)
xyplot(steps~interval, data, data$wday)
xyplot(steps~interval, data, factor=data$wday)
xyplot(steps~interval, data, scales=data$wday)
xyplot(steps~interval, data, scales=as.list(data$wday))
xyplot(steps~interval, data, groups=as.factor(data$wday))
xyplot(steps~interval|wday, data)
xyplot(steps~interval|wday, data, layout=c(2,1))
xyplot(steps~interval|wday, data, layout=c(1,2))
xyplot(steps~interval|wday, data, layout=c(1,2), type ='l')
ts <- aggregate(steps~interval+wday, data, FUN=mean)
xyplot(steps~interval|wday, ts, layout=c(1,2), type ='l')
setwd("~/dsc/5. Reproducible Research/RepData_PeerAssessment1")
